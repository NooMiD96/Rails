// <auto-generated />
using CoreReactReduxTypeScript.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreReactReduxTypeScript.Migrations
{
    [DbContext(typeof(FetcherContext))]
    partial class FetcherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreReactReduxTypeScript.Context.Fetcher", b =>
                {
                    b.Property<int>("FetcherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("FetcherId");

                    b.ToTable("Fetchers");
                });

            modelBuilder.Entity("CoreReactReduxTypeScript.Context.FetcherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .IsRequired();

                    b.Property<int>("FetcherId");

                    b.HasKey("Id");

                    b.HasIndex("FetcherId");

                    b.ToTable("FetchersData");
                });

            modelBuilder.Entity("CoreReactReduxTypeScript.Context.FetcherData", b =>
                {
                    b.HasOne("CoreReactReduxTypeScript.Context.Fetcher", "Fetcher")
                        .WithMany("FetchersDataList")
                        .HasForeignKey("FetcherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
